<?xml version="1.0"?>
<project name="jbcp5.local.build" default="release" basedir=".">

	<!--Properties-->

	<property environment="sys"/>
    <property name="jbcp.configurations" value="sipservlets-production,sipservlets-default"/>
    <property name="eap.configurations" value="default,production"/>	
    <property name="release.name" value="JBCP"/>
    <property name="release.version" value="5.1.4-SNAPSHOT"/>
	
	<condition property="mvn.executable" value="${sys.M2_HOME}\bin\mvn.bat" else="mvn">
		<os family="windows"/>
	</condition>

	<condition property="jboss.home" value="${sys.JBOSS_HOME}">
	   <not>  
	      <isset property="jboss.home"/>
	   </not>
	</condition>

	<condition property="mvn.build.profile" value="jboss-5">
	   <not>  
	      <isset property="mvn.build.profile"/>
	   </not>
	</condition>

	<condition property="jboss.node" value="default">
	   <not>  
	      <isset property="jboss.node"/>
	   </not>
	</condition>
	
    <property name="release.dir" value="${basedir}/release-package"/>
    <property name="eap.release.dir" value="${basedir}/eap-release-package"/>
	

	<!--condition property="jbcp.distro.zip.path">
	   <not>  
	      <isset property="jbcp.distro.zip.path"/>
	   </not>
	</condition>
	<condition property="eap.distro.zip.path">
	   <not>  
	      <isset property="eap.distro.zip.path"/>
	   </not>
	</condition>
	<condition property="jbcp.distro.path">
	   <not>  
	      <isset property="jbcp.distro.path"/>
	   </not>
	</condition>
	<condition property="eap.distro.path">
	   <not>  
	      <isset property="eap.distro.path"/>
	   </not>
	</condition-->

	<taskdef onerror="fail" resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${ant.file.jbcp.platform.release}/../lib/ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<target name="check-nodes">
		<condition property="ha.capable">
			<or>
				<equals arg1="${jboss.node}" arg2="all" />
				<equals arg1="${jboss.node}" arg2="production" />
				<equals arg1="${jboss.node}" arg2="sipservlets-production" />
			</or>
		</condition>
		<condition property="not.ha.capable">
			<or>
				<equals arg1="${jboss.node}" arg2="default" />
				<equals arg1="${jboss.node}" arg2="sipservlets-default" />
			</or>
		</condition>
		<condition property="supported.node" >
			<or>
			      <istrue value="${ha.capable}"/>
			      <istrue value="${not.ha.capable}"/>
			</or>
		</condition>
		<fail message="The given node is not supported!" unless="supported.node" />
		
	</target>
	
	<target name="ha-echo" if="ha.capable">
		<echo>--- builidng HA node ---</echo>
	</target>
	
	<target name="not-ha-echo" if="not.ha.capable">
		<echo>--- builidng NOT HA node ---</echo>
	</target>
	
	<!-- build all -->
	<target name="build" depends="check-nodes,ha-echo, not-ha-echo">
		<echo>builidng with JBOSS_HOME=${jboss.home} into node:${jboss.node}</echo>
		<echo>builidng MSS profile=${mvn.build.profile}</echo>
		<antcall target="build-parent" />
		<antcall target="build-maven-eclipse-plugin" />
		<antcall target="build-maven-du-plugin" />
		<antcall target="build-maven-library-plugin" />
		<antcall target="build-cluster" />
		<antcall target="build-sip-balancer" />
		<antcall target="build-jain-sip-ext" />
		<antcall target="build-jain-sip-ha" />
		<!--antcall target="build-jdiameter" />
		<antcall target="build-jdiameter-ha" />
		<antcall target="build-diameter-mux" /-->
		<antcall target="build-sip-servlets" />
	</target>

	<target name="release" depends="build,copy-props">
		<echo>Release into JBOSS node</echo>
	</target>
	
	
	<target name="repackage-JBCP" depends="prepare-input-source">
		<echo>Repackage JBCP from an old JBCP distro</echo>
		<antcall target="clean-jbcp-distro">
			<param name="jboss.home" value="${release.dir}/jboss-eap-5.1/jboss-as"/>
		</antcall>
		<for delimiter="," param="jboss.node" list="${jbcp.configurations}">
			<sequential>
				<echo>[Populating '@{jboss.node}' jboss.node]</echo>
				<antcall target="release">
					<param name="jboss.node" value="@{jboss.node}"/>
					<param name="jboss.home" value="${release.dir}/jboss-eap-5.1/jboss-as"/>
				</antcall>
			</sequential>
		</for>
		<antcall target="clean-jbcp-post-build">
			<param name="jboss.home" value="${release.dir}/jboss-eap-5.1/jboss-as"/>
		</antcall>
		<antcall target="zip-release"/>
	</target>

	<target name="package-JBCP" depends="prepare-input-source">
		<echo>Package JBCP from on top of EAP distro</echo>
		<for delimiter="," param="jboss.node" list="${eap.configurations}">
			<sequential>
				<echo>[Populating '@{jboss.node}' jboss.node]</echo>
				<antcall target="release">
					<param name="jboss.node" value="@{jboss.node}"/>
					<param name="jboss.home" value="${eap.release.dir}/jboss-eap-5.1/jboss-as"/>
				</antcall>
			</sequential>
		</for>
		<antcall target="clean-old-JBCP-nodes"/>
		<antcall target="copy-release-nodes"/>
		<antcall target="zip-release"/>
	</target>


	<target name="package-EAP-striped-MSS-only"  depends="prepare-input-source">
		<echo>Package Sipservlets on top of EAP distro</echo>
		<for delimiter="," param="jboss.node" list="${eap.configurations}">
			<sequential>
				<echo>[Populating '@{jboss.node}' jboss.node]</echo>
				<antcall target="release">
					<param name="jboss.node" value="@{jboss.node}"/>
					<param name="jboss.home" value="${eap.release.dir}/jboss-eap-5.1/jboss-as"/>
				</antcall>
			</sequential>
		</for>
		<antcall target="zip-release">
			<param name="release.dir" value="${eap.release.dir}"/>
			<param name="release.name" value="MSS-ONLY-JBCP-STRIPED"/>
		</antcall>
	</target>
	
	
	<target name="unzip-jbcp-distro">
		<unzip src="${jbcp.distro.zip.path}" dest="${release.dir}" />
	</target>

	<target name="clean-old-JBCP-nodes">
		<delete includeemptydirs="true" failonerror="true" verbose="true">
			<fileset dir="${release.dir}/jboss-eap-5.1/jboss-as/server/sipservlets-production" />
		</delete>
		<delete includeemptydirs="true" failonerror="true" verbose="true">
			<fileset dir="${release.dir}/jboss-eap-5.1/jboss-as/server/sipservlets-default" />
		</delete>
	</target>

	<target name="copy-release-nodes">
		<copy verbose="true" overwrite="true" todir="${release.dir}/jboss-eap-5.1/jboss-as/server/sipservlets-default">
			<fileset dir="${eap.release.dir}/jboss-eap-5.1/jboss-as/server/default" includes="*/**"/>
		</copy>
		<copy verbose="true" overwrite="true" todir="${release.dir}/jboss-eap-5.1/jboss-as/server/sipservlets-production">
			<fileset dir="${eap.release.dir}/jboss-eap-5.1/jboss-as/server/production" includes="*/**"/>
		</copy>
	</target>


	<target name="unzip-eap-distro">
		<delete dir="${jboss.home}" failonerror="true" />
		<unzip src="${eap.distro.zip.path}" dest="${eap.release.dir}" />

		<propertyregex input="${eap.configurations}" regexp="(\w+)" global="true" replace="**/\1/**" property="used.configurations" />
		<echo>Included configurations: ${release.configurations} -&gt; Excludes list: ${used.configurations}</echo>
		
		<delete includeemptydirs="true" failonerror="false" verbose="false">
			<fileset dir="${jboss.home}/server" excludes="${used.configurations}" />
		</delete>
		<delete includeemptydirs="true" failonerror="false" verbose="false">
			<fileset dir="${jboss.home}/../seam1"/>
		</delete>
	</target>
	
	<target name="prepare-input-source">
		<antcall target="prepare-input-source-jbcp-from-path"/>	
		<antcall target="prepare-input-source-eap-from-path"/>	
		<antcall target="prepare-input-source-jbcp-from-zip"/>	
		<antcall target="prepare-input-source-eap-from-zip"/>	
	</target>
	
	<target name="prepare-input-source-jbcp-from-path" if="jbcp.distro.path">
		<echo>JBCP path is set to: ${jbcp.distro.zip.path}</echo>
		<copy verbose="false" overwrite="false" todir="${release.dir}" failonerror="false">
			<fileset dir="${jbcp.distro.path}" includes="*/**"/>
		</copy>
	</target>

	<target name="prepare-input-source-eap-from-path" if="eap.distro.path">
		<echo>EAP path is set to: ${eap.distro.path}</echo>
		<copy verbose="false" overwrite="false" todir="${eap.release.dir}" failonerror="false">
			<fileset dir="${eap.distro.path}" includes="*/**"/>
		</copy>
	</target>
	
	<target name="prepare-input-source-jbcp-from-zip" if="jbcp.distro.zip.path">
		<echo>JBCP path to zip is set to: ${jbcp.distro.zip.path}</echo>
		<antcall target="unzip-jbcp-distro"/>
	</target>
	
	<target name="prepare-input-source-eap-from-zip" if="eap.distro.zip.path">
		<echo>eap path to zip is set to: ${eap.distro.zip.path}</echo>
		<antcall target="unzip-eap-distro">
			<param name="jboss.home" value="${eap.release.dir}/jboss-eap-5.1/jboss-as"/>
		</antcall>
	</target>

	<target name="clean-jbcp-distro">
		<for delimiter="," param="jboss.node" list="${jbcp.configurations}">
			<sequential>
				<echo>[Cleaning '@{jboss.node}' jboss.node]</echo>
				<delete failonerror="true" verbose="true">
					<fileset file="${jboss.home}/server/@{jboss.node}/deploy/profileservice-jboss-beans.xml"/>
				</delete>				
				<!--delete failonerror="true" verbose="true">
					<fileset file="${jboss.home}/server/@{jboss.node}/deploy/sip-servlets-management.war"/>
				</delete-->				
				<!--delete failonerror="true" verbose="true">
					<fileset dir="${jboss.home}/server/@{jboss.node}/deploy/admin-console.war/plugins">
						<include name="**/*mobicents*"/>
					</fileset>
				</delete-->				
				<delete failonerror="true" verbose="true">
					<fileset dir="${jboss.home}/server/@{jboss.node}/deploy/jbossweb.sar">
						<include name="**/jain-sip-ri*.jar"/>
					</fileset>
				</delete>				
				<delete failonerror="true" verbose="true">
					<fileset dir="${jboss.home}/server/@{jboss.node}/deploy/jbossweb.sar">
						<patternset id="pat">
							<include name="**/cache*"/>
							<include name="**/core*"/>
							<include name="**/mobicents*"/>
							<include name="**/sip*"/>
							<include name="**/timers*"/>
						  </patternset>		
					</fileset>
				</delete>				
				<delete failonerror="true" verbose="true">
					<fileset dir="${jboss.home}/server/@{jboss.node}/deployers/jbossweb.deployer">
						<include name="**/sip-servlets*"/>
					</fileset>
				</delete>				
			</sequential>
		</for>
		<delete failonerror="true" verbose="true">
				<fileset dir="${jboss.home}/common/lib">
					<include name="**/sip-servlets-jboss5-ha-server-cache*"/>
				</fileset>
		</delete>				
	</target>
	
	
	<target name="clean-jbcp-post-build">
		<delete failonerror="true" verbose="true">
			<fileset dir="${jboss.home}/client">
				<include name="**/sip-servlets-spec*"/>
			</fileset>
			<fileset dir="${jboss.home}/docs/licenses">
				<include name="**/JAIN_SIP*"/>
				<include name="**/LGPL-LICENSE*"/>
				<include name="**/MOBICENTS-LICENSE*"/>
			</fileset>
		</delete>				
	</target>	
	
	
	<target name="copy-props">
		<copy overwrite="true" verbose="true" file="${ant.file.jbcp5.local.build}/../../sip-servlets/sip-servlets-bootstrap/release/jboss-beans.xml" todir="${jboss.home}/server/${jboss.node}/deploy/jbossweb.sar/META-INF" />
		<copy overwrite="true" verbose="true" file="${ant.file.jbcp5.local.build}/../../sip-servlets/sip-servlets-bootstrap/release/context-jboss-5.xml" tofile="${jboss.home}/server/${jboss.node}/deploy/jbossweb.sar/context.xml" />
		<copy overwrite="true" verbose="true" file="${ant.file.jbcp5.local.build}/../../sip-servlets/sip-servlets-bootstrap/release/profileservice-jboss-beans.xml" todir="${jboss.home}/server/${jboss.node}/deploy" />
		<!--deployer-->
		<copy overwrite="true" verbose="true" file="${ant.file.jbcp5.local.build}/../../sip-servlets/sip-servlets-bootstrap/release/metadata-deployer-jboss-beans.xml" todir="${jboss.home}/server/${jboss.node}/deployers" />

		<antcall target="copy-HA-props" />
		<antcall target="copy-non-HA-props" />
	
	</target>

	<target name="copy-HA-props" if="ha.capable">
				
		<copy overwrite="true" verbose="true" file="${ant.file.jbcp5.local.build}/../../sip-servlets/sip-servlets-examples/simple-sip-servlet-distributable/distributable-simple-dar.properties" tofile="${jboss.home}/server/${jboss.node}/conf/dars/mobicents-dar.properties" />
		<copy overwrite="true" verbose="true" file="${ant.file.jbcp5.local.build}/../../sip-servlets/sip-servlets-bootstrap/release/mss-sip-stack-jboss-5-all.properties" tofile="${jboss.home}/server/${jboss.node}/conf/mss-sip-stack.properties" />
		<copy overwrite="true" verbose="true" file="${ant.file.jbcp5.local.build}/../../sip-servlets/sip-servlets-impl/docs/jboss5/failover-server-jboss-5.xml" tofile="${jboss.home}/server/${jboss.node}/deploy/jbossweb.sar/server.xml" />
		<!--deployer-->
		<copy overwrite="true" verbose="true" file="${ant.file.jbcp5.local.build}/../../sip-servlets/sip-servlets-bootstrap/release/failover-war-deployers-jboss-beans.xml" tofile="${jboss.home}/server/${jboss.node}/deployers/jbossweb.deployer/META-INF/war-deployers-jboss-beans.xml" />
		
		
		<!-- MVN respective assembles-->
	    <!--file>
	      <source>${basedir}/../sip-servlets-examples/simple-sip-servlet-distributable/distributable-simple-dar.properties</source>
	      <destName>mobicents-dar.properties</destName>
	      <outputDirectory>/conf/dars</outputDirectory>
	    </file>
	    <file>
	      <source>${basedir}/../sip-servlets-bootstrap/release/mss-sip-stack-jboss-5-all.properties</source>
	      <destName>mss-sip-stack.properties</destName>
	      <outputDirectory>/conf</outputDirectory>
	    </file>
	    <file>
	      <source>${basedir}/../sip-servlets-impl/docs/jboss5/failover-server-jboss-5.xml</source>
	      <destName>server.xml</destName>
	      <outputDirectory>/jbossweb.sar</outputDirectory>
	    </file>
	    <file>
	      <source>${basedir}/../sip-servlets-bootstrap/release/jboss-beans.xml</source>
	      <outputDirectory>/jbossweb.sar/META-INF</outputDirectory>
	    </file>
	    <file>
	      <source>${basedir}/../sip-servlets-bootstrap/release/context-jboss-5.xml</source>
	      <destName>context.xml</destName>
	      <outputDirectory>/jbossweb.sar</outputDirectory>
	    </file>
	    <file>
	      <source>${basedir}/../sip-servlets-bootstrap/release/profileservice-jboss-beans.xml</source>
	      <destName>profileservice-jboss-beans.xml</destName>
	      <outputDirectory>/</outputDirectory>
	    </file>
		
	    <file>
	      <source>${basedir}/../sip-servlets-bootstrap/release/metadata-deployer-jboss-beans.xml</source>
	      <outputDirectory>/</outputDirectory>
	    </file>
	    <file>
	      <source>${basedir}/../sip-servlets-bootstrap/release/failover-war-deployers-jboss-beans.xml</source>
	      <destName>war-deployers-jboss-beans.xml</destName>
	      <outputDirectory>/jbossweb.deployer/META-INF</outputDirectory>
	    </file-->
		
	
	</target>
	
	<target name="copy-non-HA-props" if="not.ha.capable">
		<copy overwrite="true" verbose="true" file="${ant.file.jbcp5.local.build}/../../sip-servlets/sip-servlets-bootstrap/src/site/resources/click2call-dar.properties" tofile="${jboss.home}/server/${jboss.node}/conf/dars/mobicents-dar.properties" />
		<copy overwrite="true" verbose="true" file="${ant.file.jbcp5.local.build}/../../sip-servlets/sip-servlets-bootstrap/release/mss-sip-stack-jboss-5.properties" tofile="${jboss.home}/server/${jboss.node}/conf/mss-sip-stack.properties" />
		<copy overwrite="true" verbose="true" file="${ant.file.jbcp5.local.build}/../../sip-servlets/sip-servlets-bootstrap/release/server-jboss-5.xml" tofile="${jboss.home}/server/${jboss.node}/deploy/jbossweb.sar/server.xml" />
		<!--deployer-->
		<copy overwrite="true" verbose="true" file="${ant.file.jbcp5.local.build}/../../sip-servlets/sip-servlets-bootstrap/release/war-deployers-jboss-beans.xml" todir="${jboss.home}/server/${jboss.node}/deployers/jbossweb.deployer/META-INF" />
		
		<!-- MVN respective assembles-->
	    <!--file>
	      <source>${basedir}/../sip-servlets-bootstrap/src/site/resources/click2call-dar.properties</source>
	      <destName>mobicents-dar.properties</destName>
	      <outputDirectory>/conf/dars</outputDirectory>
	    </file>
	    <file>
	      <source>${basedir}/../sip-servlets-bootstrap/release/mss-sip-stack-jboss-5.properties</source>
	      <destName>mss-sip-stack.properties</destName>
	      <outputDirectory>/conf</outputDirectory>
	    </file>
	    <file>
	      <source>${basedir}/../sip-servlets-bootstrap/release/server-jboss-5.xml</source>
	      <destName>server.xml</destName>
	      <outputDirectory>/jbossweb.sar</outputDirectory>
	    </file>
	    <file>
	      <source>${basedir}/../sip-servlets-bootstrap/release/jboss-beans.xml</source>
	      <outputDirectory>/jbossweb.sar/META-INF</outputDirectory>
	    </file>
	    <file>
	      <source>${basedir}/../sip-servlets-bootstrap/release/context-jboss-5.xml</source>
	      <destName>context.xml</destName>
	      <outputDirectory>/jbossweb.sar</outputDirectory>
	    </file>
	    <file>
	      <source>${basedir}/../sip-servlets-bootstrap/release/profileservice-jboss-beans.xml</source>
	      <destName>profileservice-jboss-beans.xml</destName>
	      <outputDirectory>/</outputDirectory>
	    </file>

	    <file>
	      <source>${basedir}/../sip-servlets-bootstrap/release/metadata-deployer-jboss-beans.xml</source>
	      <outputDirectory>/</outputDirectory>
	    </file>
	    <file>
	      <source>${basedir}/../sip-servlets-bootstrap/release/war-deployers-jboss-beans.xml</source>
	      <outputDirectory>/jbossweb.deployer/META-INF</outputDirectory>
	    </file-->
		
	
	</target>
	<!-- ========================== -->
	<!-- components build targets -->
	<!-- ========================== -->

	<!-- parent-->

	<target name="build-parent">
		<exec executable="${mvn.executable}" dir="${ant.file.jbcp5.local.build}/../../parent">
			<arg line="clean install -P validate-source-headers" />
		</exec>
	</target>
	
	<!-- tools-->
	
	<target name="build-maven-du-plugin">
		<exec executable="${mvn.executable}" dir="${ant.file.jbcp5.local.build}/../../tools/maven-du-plugin">
			<arg line="clean install -P validate-source-headers" />
		</exec>
	</target>

	<target name="build-maven-eclipse-plugin">
		<exec executable="${mvn.executable}" dir="${ant.file.jbcp5.local.build}/../../tools/maven-eclipse-plugin">
			<arg line="clean install -P validate-source-headers" />
		</exec>
	</target>
	
	<target name="build-maven-library-plugin">
		<exec executable="${mvn.executable}" dir="${ant.file.jbcp5.local.build}/../../tools/maven-library-plugin">
			<arg line="clean install -P validate-source-headers" />
		</exec>
	</target>
	
	<!-- HA-->
	
	<target name="build-cluster">
		<exec executable="${mvn.executable}" dir="${ant.file.jbcp5.local.build}/../../cluster">
			<arg line="clean install -P validate-source-headers" />
		</exec>
	</target>
	
	<target name="build-sip-balancer">
		<exec executable="${mvn.executable}" dir="${ant.file.jbcp5.local.build}/../../sip-balancer">
			<arg line="clean install -P validate-source-headers" />
		</exec>
	</target>

	<target name="build-jain-sip-ext">
		<exec executable="${mvn.executable}" dir="${ant.file.jbcp5.local.build}/../../jain-sip-ext">
			<arg line="clean install -P validate-source-headers" />
		</exec>
	</target>

	<target name="build-jain-sip-ha">
		<exec executable="${mvn.executable}" dir="${ant.file.jbcp5.local.build}/../../jain-sip-ha">
			<arg line="clean install -P validate-source-headers" />
		</exec>
	</target>
	
	<!--Diameter-->
	<target name="build-jdiameter">
		<exec executable="${mvn.executable}" dir="${ant.file.jbcp5.local.build}/../../jdiameter">
			<arg line="clean install -P validate-source-headers" />
		</exec>
	</target>
	
	<target name="build-jdiameter-ha">
		<exec executable="${mvn.executable}" dir="${ant.file.jbcp5.local.build}/../../jdiameter-ha">
			<arg line="clean install -P validate-source-headers" />
		</exec>
	</target>

	<target name="build-diameter-mux">
		<exec executable="${mvn.executable}" dir="${ant.file.jbcp5.local.build}/../../diameter-mux">
			<arg line="clean install -P validate-source-headers" />
		</exec>
	</target>

	<!-- Sip Servlets -->
	
	<target name="build-sip-servlets">
		<echo>build-sip-servlets</echo>
		<echo>builidng with JBOSS_HOME=${jboss.home} into node:${jboss.node}</echo>
		<exec executable="${mvn.executable}" dir="${ant.file.jbcp5.local.build}/../../sip-servlets">
			<arg line="clean install -P validate-source-headers -P${mvn.build.profile} -Denv.JBOSS_HOME=${jboss.home} -Dnode=${jboss.node}" />
		</exec>
	</target>
	
	<target name="zip-release" depends="set-zip-filename">
		<zip destfile="${ant.file.mobicents.all.release}/../${zip.filename}" filesonly="false">
			<zipfileset dir="${release.dir}" prefix="" />
		</zip>
	</target>
	
	<target name="set-zip-filename" depends="set-time-stamp">
		<property name="zip-filename-prefix" value="${release.name}-${release.version}" />
		<condition property="zip.filename" value="${zip-filename-prefix}-${time.stamp}.zip" else="${zip-filename-prefix}.zip">
			<isset property="time.stamp" />
		</condition>
	</target>

	<target name="set-time-stamp" unless="skip.timestamp">
		<tstamp>
			<format property="time.stamp" pattern="yyMMddHHmm" />
		</tstamp>
	</target>	

	<!-- clean build process -->
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${docs.stage.dir}" />
	</target>

</project>
