<?xml version='1.0'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "User_Guide.ent">
%BOOK_ENTITIES;
]>
<chapter id="ittms-Architecture_the_Media_Server"> 
<title>Media Server Architecture</title>


<para>
	It is convenient to consider a media gateway as a
	collection of endpoints. An endpoint is a logical
	representation of a physical entity such as an analog
	phone or a channel in a trunk. Endpoints are sources or
	sinks of data and can be either physical or virtual.
	Physical endpoint creation requires hardware
	installation, while software is sufficient for creating
	virtual endpoints. An interface on a gateway that
	terminates at a trunk connected to a
	<acronym>PTSN</acronym>
	switch would be an example of a physical endpoint. An
	audio source in an audio content server would be an
	example of a virtual endpoint.
</para>

<para>
   	The Media Server assumes a connection model where the basic constructs are
   	endpoints and connections. Connections are grouped in calls. One or
	more connections can belong to one call. Connections and calls are
	set up at the initiative of one or several Call Agents.
</para>

<para>
	Controller Modules allows external interfaces to be
	implemented for the Media Server. Each controller module
	implements an industry standard control protocol, and
	uses a generic SPI to control processing components or
	endpoints.
</para>

<mediaobject id="ittms-mms-MMSArchictecture-dia-MMS">
	<imageobject>
		<imagedata align="center" width="550"
					fileref="images/mms-MMSArchictecture-dia-MMS2.jpg" 						format="PNG">
		</imagedata>
	</imageobject>
</mediaobject>

<section id="ittms-Endpoints">
	<title>Endpoints</title>
	<para>
		The type of the endpoint determines its functionality.
		Our analysis, so far, has led us to isolate the
		following basic endpoint types:
	</para>
	<itemizedlist>
		<listitem>
			<para>
				Digital signal  
			(<acronym>DS0</acronym>)
			</para>
		</listitem>
		
		<listitem>
			<para>Announcement server access point</para>
		</listitem>
		<listitem>
			<para>Conference bridge access point</para>
		</listitem>
		<listitem>
			<para>Packet relay</para>
		</listitem>
		<listitem>
			<para>Interactive Voice Response</para>
		</listitem>
		<listitem>
			<para>Sound card</para>
		</listitem>
	</itemizedlist>

	<para>
		This list is not final: other endpoint types may be
		defined in the future, such as test endpoints which
		could be used to check network quality, or frame-relay
		endpoints that could be used to manage audio channels
		multiplexed over a frame-relay virtual circuit.
	</para>

<section id="ittms-Endpoint_DS0">
	<title>Digital Channel DSO</title>
	<para>
		Digital channels provide an 8Khz*8bit service.  Such channels are
   		found in trunk and ISDN interfaces.  They are typically part of
   		digital multiplexes, such as T1, E1, T3 or E3 interfaces. Media
   		gateways that support such channels are capable of translating the
   		digital signals received on the channel, which may be encoded
   		according to A or mu-law, using either the complete set of 8 bits or
   		only 7 of these bits, into audio packets.  When the media gateway
   		also supports a NAS service, the gateway shall be capable of
   		receiving either audio-encoded data (modem connection) or binary data
   		(ISDN connection) and convert them into data packets.
	</para>
	<para>
		In some cases, digital channels are used to carry signalling.  This
   		is the case for example of SS7 "F" links, or ISDN "D" channels.
   		Media gateways that support these signalling functions shall be able
   		to send and receive the signalling packets to and from a call agent,
   		using the "back haul" procedures defined by the SIGTRAN working group
   		of the IETF.  Digital channels are sometimes used in conjunction with
   		channel associated signalling, such as "MF R2". 
	</para>
</section>

<section id="ittms-Endpoint_AAP">
	<title>Announcement Access Point</title>
	<para>
		An announcement server endpoint provides acces to an announcement
   		service. Under requests from the call agent, the announcement server
   		will "play" a specified announcement. A given announcement endpoint is not 			supposed to support more than one connection at a time. If several connections 			were established to the same endpoint, then the same announcements would be 			played simultaneously over all the connections. 
	</para>
	<para>
		Connections to an announcement server are typically oneway, or "half
   		duplex" -- the announcement server is not expected to listen the
   		audio signals from the connection.
	</para>
</section>

<section id="ittms-Endpoint_CNF">
	<title>Conference bridge</title>
	<para>
		A conference bridge endpoint is used to provide access to a specific
   		conference.Media server establishes several connections
   		between the endpoint and the packet networks, or between the endpoint
   		and other endpoints in the same server instance. The precise number of
   		connections that an endpoint support is a characteristic of the
  		server's configuration, and may in fact vary according with the used hardware.
	
	</para>	
</section>

<section id="ittms-Endpoint_PR">
	<title>Packet Relay</title>
	<para>
		A packet relay endpoint is a specific form of conference bridge, that
   		typically only supports two connections.  Packets relays can be found
   		in firewalls between a protected and an open network, or in
   		transcoding servers used to provide interoperation between
   		incompatible gateways, for example gateways that do not support
   		compatible compression algorithms, or gateways that operate over
   		different transmission networks.	
	</para>	
</section>

<section id="ittms-Endpoint_IVR">
	<title>Interactive Voice Response</title>
	<para>
		An Interactive Voice Response (IVR) endpoint provides acces to an IVR
   		service. Under requests from the call agent, the IVR server will
   		"play" announcements and tones, and will "listen" to responses from
   		the user.	
	</para>	
	<para>
		A given IVR endpoint is not supposed to support more than one
   		connection at a time. If several connections were established to the
   		same endpoint, then the same tones and announcements would be played
   		simultaneously over all the connections.	
	</para>	
</section>

<section id="ittms-Endpoint_Soundcard">
	<title>Soundcard</title>
	<para>
		The sound card gives access to both Analogue-to-Digital Converter (ADC) and	
		Digital-to-Analogue Converter (DAC) Data transmission over the Internet is done 		digitally so in order for voice to be transmitted it must be converted to 			digital using an ADC  and be converted into analog again using a DAC so the 			voice it can be heard on the other end.
	</para>		
</section>

</section>


<section id="ittms-Endpoint_Local_Names">
	<title>Endpoint local identifiers</title>
	<para>
		The syntax of the local name depends on the type of endpoint being
   		named. However, the local name for each of these types is naturally
   		hierarchical, beginning with a term which identifies the physical
   		gateway containing the given endpoint and ending in a term which
   		specifies the individual endpoint concerned. With this in mind,  the
   		following rules for construction and interpretation of the local identifier 			for these entity types MUST be supported:
		<itemizedlist>
			<listitem>
				<para>
					The individual terms of the naming path MUST be 					separated by a single slash ("/", ASCII 2F hex).
				</para>
			</listitem>
		
			<listitem>
				<para>
					The individual terms are character strings composed of 						letters, digits or other printable characters, with the 					exception of characters used as delimitors ("/", "@"), 						characters used for wildcarding ("*", "$") and white 						spaces.
				</para>
			</listitem>

			<listitem>
				<para>
					Wild-carding is represented by square brakets and 						range using the following pattern: [a..b] where a,b - 						are integer numbers.
				</para>
			</listitem>

			<listitem>
				<para>
					In the ISUP protocol, trunks are grouped into trunk 						groups, identified by the SS7 point codes of the 						switches that the group connects. Circuits within a 						trunk group are identified by a circuit number (CIC in 						ISUP).
				</para>
			</listitem>
		</itemizedlist>
	</para>		
</section>

<section id="ittms-Calls_and_Connections">
	<title>Calls and Connections</title>
	<para>
		Connections are created on the call agent on each endpoint that will
   		be involved in the "call."  Connections may be either point to point or 		multipoint. A point to point connection is an association between two endpoints 		with the
   		purpose of transmitting data between these endpoints. Once this
   		association is established for both endpoints, data transfer between
   		these endpoints can take place. A multipoint connection is
   		established by connecting the endpoint to a multipoint session.

   		Connections can be established over several types of bearer networks:
		<itemizedlist>
			<listitem>
				<para>
					Transmission of audio packets using RTP and UDP over a 						TCP/IP network.
				</para>
			</listitem>
			<listitem>
				<para>
					Transmission of packets over an internal connection, 						for example
      					the TDM backplane or the interconnection bus of a 						gateway. This is
      					used, in particular, for "hairpin" connections, 					connections that
      					terminate in a gateway but are immediately rerouted 						over the telephone network.
				</para>
			</listitem>
		</itemizedlist>
		In the classic example of a connection
   		between two "DS0" endpoints (EP1 and EP2), the call agents
   		controlling the end points will establish two connections (C1 and
   		C2):

	</para>
	<para>
		Each connection will be designated locally by a connection
   		identifier, and will be characterized by connection attributes.
	</para>
	<para>
		Once established, the connection parameters can be modified at any
   		time by a "modify connection" command.  The call agent may for
   		example instruct the gateway to change the compression algorithm used
   		on a connection, or to modify the IP address and UDP port to which
   		data should be sent, if a connection is "redirected."
	</para>
	<para>
		The call agent removes a connection by sending to the gateway a
   		"delete connection" command.  The gateway may also, under some
   		circumstances, inform a gateway that a connection could not be
   		sustained.
	</para>
	
</section>

<section id="ittms-Controller-Modules">
			<title>Controller Modules</title>
			<para>
				Controller Modules allows external interfaces to be
				implemented for the Media Server. Each controller module
				implements an industry standard control protocol, and
				uses a generic SPI to control processing components or
				endpoints.
			</para>
			<para>
				One such controller module is the Media Gateway Control
				Protocol (MGCP). MGCP is designed as an internal
				protocol within a distributed system that appears to
				outside as a single VoIP gateway. The MGCP is composed
				of a Call Agent, and set of gateways including at least
				one "media gateway" which performs the conversion of media
				signal between circuit and packets, and atleast one
				"signalling gateway" when connected to SS7
				controlled network. The Call Agent can be distributed
				over several computer platforms.
			</para>
<section id="ittms-Controller-Modules-MGCP">
	<title>Media gateway control protocol</title>
	<para>
		Media Gateway Control Protocol (MGCP) is used for controlling telephony 		gateways from external call control elements called media gateway controllers 			or call agents. A telephony gateway is a network element that provides 			conversion between the audio signals carried on telephone circuits and data 			packets carried over the Internet or over other packet networks.
	</para>
	<para>
		MGCP assumes a call control architecture where the call control intelligence is 		outside the gateways and handled by external call control elements. The MGCP 			assumes that these call control elements, or Call Agents, will synchronize with 		each other to send coherent commands to the gateways under their control. MGCP 			is, in essence, a master/slave protocol, where the gateways are expected to 			execute commands sent by the Call Agents.	
	</para>
</section>

</section>




</chapter>
