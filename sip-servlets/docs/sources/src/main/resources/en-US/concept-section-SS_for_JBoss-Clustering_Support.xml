<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "SIP_Servlets_Server_User_Guide.ent">
%BOOK_ENTITIES;
]>
<!-- chapter id nickname: ssfjcs --><section id="ssfjcs-SS_for_JBoss-Clustering_Support">
  <title>&PLATFORM_NAME; SIP Servlets for JBoss: Clustering Support</title>
  <para>&PLATFORM_NAME; supports the clustering of SIP Servlets-enabled JBoss Application Servers for performance, reliability and failover purposes. Note that only &SHORT_PLATFORM_NAME; for JBoss Servers can be used as cluster nodes; &SHORT_PLATFORM_NAME; for Tomcat Containers are not supported.</para>
  <para>The SIP Servlets Server uses the  JBoss Application Server as its servlet container, and takes advantage of its capabilities, including clustering and failover.  For detailed background information about JBoss Application Server clustering refer to the <ulink url="http://www.jboss.org/file-access/default/members/jbossas/freezone/docs/Clustering_Guide/beta422/html/index.html">JBoss Application Server Clustering Guide</ulink>.</para>
<!-- SIP Servlets Server Cluster -->  <section id="ssfjcs-binary-SIP_Servlets_Server_Cluster-Installing_Configuring_and_Running">
    <title>SIP Servlets Server Cluster: Installing, Configuring and Running</title>
    <para>&nbsp;</para>
    <section id="ssfjcs-binary-SIP_Servlets_Server_Cluster-PreInstall_Requirements_and_Prerequisites">
      <title>Pre-Install Requirements and Prerequisites</title>
      <para>&nbsp;</para>
      <variablelist id="ssfjcs-binary-SIP_Servlets_Server_Cluster-Software_Prerequisites">
        <title>Software Prerequisites</title>
        <varlistentry>
          <term>A SIP Servlets-enabled JBoss Application Server</term>
          <listitem>
            <para>Before proceeding, ensure you have correctly configured your JBoss Application Server, according to SIP Servlet Server requirements:</para>
            <itemizedlist>
              <listitem>
                <para>
         <xref linkend="bssswjicar-binary-SIP_Servlets_Server_with_JBoss-Installing_Configuring_and_Running"/>
        </para>
              </listitem>
            </itemizedlist>
            <para>The easiest way to set up a cluster of SIP Servlets-enabled JBoss Application Servers is to install, configure and test the binary distribution on one machine, and then  copy the entire installation (directory) to the other machines in the cluster. This is the approach taken in this chapter.</para>
            <para>Install a SIP Servlets Server with JBoss by following the instructions detailed in <xref linkend="bssswjicar-binary-SIP_Servlets_Server_with_JBoss-Installing_Configuring_and_Running"/>. </para>
            <para>Afer meeting the requirement you can begin to configure the server  <xref linkend="ssfjcs-binary-SIP_Servlets_Server_Cluster-Configuring"/> below.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
<!-- <section
  id="ssfjcs-binary-SIP_Servlets_Server_Cluster-Downloading">
  <title>Downloading</title>
  <para>&nbsp;</para>
 </section> --><!--<section
   id="ssfjcs-binary-SIP_Servlets_Server_Cluster-Installing">
   <title>Installing</title>
   <para>&nbsp;</para>
  </section>-->    <section id="ssfjcs-binary-SIP_Servlets_Server_Cluster-Configuring">
      <title>Configuring</title>
      <para>Once installed, the &SHORT_PLATFORM_NAME; for JBoss binary distribution requires only minor configuration in order to enable clustering. </para>
      <para>SIP, and HTTP session state clustering is  pre-configured straight out of the binary distribution. However, to enable session replication in a node, you must tag it as <literal>&lt;distributable/&gt;</literal> both in the <filename>web.xml</filename> and <filename>sip.xml</filename> descriptors. This can be done only individually (per application).</para>
    </section>
    <section id="ssfjcs-binary-SIP_Servlets_Server_Cluster-Running">
      <title>Running</title>
      <para>Clustering with &SHORT_PLATFORM_NAME; for JBoss nodes requires running all of the nodes using the &quot;all&quot; Server Configuration Profile, which is specified when you invoke <command>run.sh</command> or <command>run.bat</command>.</para>
      <formalpara>
        <title>Running &SHORT_PLATFORM_NAME; for JBoss with the &quot;all&quot; Configuration Profile, on Linux</title>
        <para>To run the server on Linux using the &quot;all&quot; Configuration Profile, start the server with the following command:</para>
      </formalpara>
      <screen>&SHORT_PLATFORM_NAME;-jboss-&lt;version&gt;]$ ./bin/run.sh -c all</screen>
      <formalpara>
        <title>Running &SHORT_PLATFORM_NAME; for JBoss with the &quot;all&quot; Configuration Profile, on Windows</title>
        <para>To run the server on Windows using the &quot;all&quot; Configuration Profile, open the Command Prompt, change your folder to the topmost folder of your &SHORT_PLATFORM_NAME; for JBoss installation, and issue the following command:</para>
      </formalpara>
      <screen>C:&bsol;Users&bsol;user\&lt;username&gt;&bsol;My Downloads&bsol;&SHORT_PLATFORM_NAME;-jboss-&lt;version&gt;&gt;bin&bsol;run.bat -c all</screen>
      <formalpara>
        <title>Distributing requests between nodes</title>
        <para>Together with the application server nodes, it is advised to run a SIP load-balancer or an IP load-balancer.  The IP load balancer will distribute the traffic evenly between the nodes. A load-balancer is a single entry-point to all nodes. All calls should be made through the load balancer if  High Availability is required. For more information about load balancing, refer to  <xref linkend="sslb-SIP_Servlets_Load_Balancer-Implementation"/>.</para>
      </formalpara>
      <para>By default, the servers are configured with one SIP load-balancer set to the  IP address <literal>127.0.0.1</literal>. This is specified in the <literal>balancers</literal> attribute in the <filename>server.xml</filename> configuration file as follows:</para>
      <programlisting role="XML">&lt;Service name=&quot;jboss.web&quot; 
      className=&quot;org.mobicents.servlet.sip.startup.failover.SipStandardBalancerNodeService&quot;
  balancers=&quot;127.0.0.1&quot;  
  sipPathName=&quot;org.mobicents.ha&quot;  
  sipApplicationDispatcherClassName=&quot;org.mobicents.servlet.sip.core.SipApplicationDispatcherImpl&quot;
concurrencyControlMode=&quot;None&quot; 
  darConfigurationFileLocation=&quot;conf/dars/mobicents-dar.properties&quot;&gt;
</programlisting>
      <para>Multiple load balancers can be specified and all of them will be updated on the health status of the node. The complete syntax for the balancers string is the following:</para>
      <programlisting role="XML">&lt;Service name=&quot;jboss.web&quot; 
      ...
  balancers=&quot;ipAddress1:sipPort1:rmiPort1;ipAddress2:sipPort2:rmiPort2;..3...4..&quot;  
  ...&gt;
</programlisting>
      <para>If the RMI port is omitted port 2000 is assumed, and if the SIP port is omitted 5065 is assumed.</para>
      <warning>
        <para>The SIP port  specified in the balancers string for each balancer refers to the internal SIP port of the SIP balancer. That is because the internal port faces the cluster nodes directly. Requests coming through the internal port will go to the external port and vice versa. If you put the external port in the <literal>balancers</literal> string, then the SIP LB will assume that the requests comes from outside the cluster and it will route it back to some cluster node instead of routing it outside the cluster as expected. Always use the SIP internal port in the <literal>balancers</literal> string. Exception to this rule is when a single port is used for internal and external ports in the SIP load balancer. In that case the direction analysis is done based on <literal>Via</literal> headers and the requests are routed correctly without extra settings.</para>
        <para/>
      </warning>
      <para>When multiple SIP load balancers are specified, the outgoing requests will always go through the first one, or an IP load balancer can be used and the requests will be distributed based on the IP balancer policy. To route the outgoing requests to a particular IP address (the IP load balancer address for example) the <literal>outboundProxy</literal> property can be used:</para>
      <programlisting role="XML">&lt;Service name=&quot;jboss.web&quot; 
      ...
  balancers=&quot;127.0.0.1:5060:2000;127.0.0.1:5160:2100&quot;  
outboundProxy=&quot;127.0.0.1:5500&quot;
  ...&gt;
</programlisting>
      <para>In this example configuration all outbound requests will go through 127.0.0.1:5500, while the node will perform the health checks against two SIP load balancers. If the 127.0.0.1:5500 machine is an IP load balancer it should be configured to spray the  SIP load balancers and they will route the requests outside the cluster reliably.</para>
      <para>The <literal>outboundProxy</literal> attribute overrides the default effect of specifying a SIP port for SIP load balancers in the <literal>balancers</literal> string.</para>
    </section>
<!--<section
   id="ssfjcs-binary-SIP_Servlets_Server_Cluster-Using">
   <title>Using</title>
   <para>&nbsp;</para>
  </section>-->    <section id="ssfjcs-binary-SIP_Servlets_Server_Cluster-Stopping">
      <title>Stopping</title>
      <para>Individual nodes in the cluster should be stopped one-by-one, followed by the SIP load balancer. Refer to:</para>
      <itemizedlist>
        <listitem>
          <para>Stopping the SIP load balancer: <xref linkend="sslb-binary-SIP_Load_Balancer-Stopping"/>
     </para>
        </listitem>
        <listitem>
          <para>Stopping &SHORT_PLATFORM_NAME; for JBoss: <xref linkend="bssswjicar-binary-SIP_Servlets_Server_with_JBoss-Stopping"/>
     </para>
        </listitem>
        <listitem>
          <para>Stopping &SHORT_PLATFORM_NAME; for Tomcat: <xref linkend="bssswticar-binary-SIP_Servlets_Server_with_Tomcat-Stopping"/>
     </para>
        </listitem>
      </itemizedlist>
    </section>
    <section id="ssfjcs-binary-SIP_Servlets_Server_Cluster-Testing">
      <title>Testing</title>
      <para>To test your JBoss cluster setup for mid-call failover (Established SIP Dialog), refer to:</para>
      <itemizedlist>
        <listitem>
          <para>
      <xref linkend="ssfjfs-SS_for_JBoss-Failover_Support"/>
     </para>
        </listitem>
      </itemizedlist>
    </section>
    <section id="ssfjcs-binary-SIP_Servlets_Server_Cluster-Uninstalling">
      <title>Uninstalling</title>
      <para>Uninstalling a SIP Servlets Cluster would entail deleting the Mobicents SIP Servlets Servers directories, the SIP Load Balancer directory, and possibly removing the unused <envar>JBOSS_HOME</envar> environment variable.</para>
    </section>
  </section>
</section>
